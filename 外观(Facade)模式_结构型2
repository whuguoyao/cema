/******************************************** main.cpp ********************************************/
#include "stdafx.h"
#include <iostream>
using namespace std;

class CCompany {
public:
	CCompany() { m_name = " "; }
	CCompany(string name) { m_name = name; }
	~CCompany() {}
	virtual void Add(CCompany *com) {};
	virtual void Show(const int &depth) = 0;
protected:
	string m_name;
};

//相当于饭店的服务员
class CServerCompany :public CCompany {
public:
	CServerCompany(string name) :CCompany(name) {}
	virtual ~CServerCompany() {}
	virtual void Add(CCompany *com) { m_listCompany.push_back(com); }

	void Show(const int &depth) {
		for (int i = 0; i < depth; ++i)
			cout << "-";
		cout << m_name.c_str() << endl;

		list<CCompany *>::iterator iter = m_listCompany.begin();
		for (; iter != m_listCompany.end(); iter++)
			(*iter)->Show(depth+2);
	}
protected:
	list<CCompany *> m_listCompany;
};

class CFinanceDepartMent :public CCompany {
public:
	CFinanceDepartMent(string name) :CCompany(name) {}
	virtual ~CFinanceDepartMent() {}
	virtual void Show(const int &depth) {
		for (int i = 0; i < depth; ++i)
			cout << "-";
		cout << m_name.c_str() << endl;
	}
};

class CHRDepartMent :public CCompany {
public:
	CHRDepartMent(string name) :CCompany(name) {}
	virtual ~CHRDepartMent() {}
	virtual void Show(const int &depth) {
		for (int i = 0; i < depth; ++i)
			cout << "-";
		cout << m_name.c_str() << endl;
	}
};

void  main()
{
	CCompany *pRoot = new CServerCompany("服务总公司");
	CCompany *pLeaf1 = new CFinanceDepartMent("财务部");
	CCompany *pLeaf2 = new CHRDepartMent("人力资源部");
	pRoot->Add(pLeaf1);   pRoot->Add(pLeaf2);  

	CCompany *pMid1 = new CServerCompany("分公司A");
	CCompany *pLeaf3 = new CFinanceDepartMent("财务部");
	CCompany *pLeaf4 = new CHRDepartMent("人力资源部");
	pMid1->Add(pLeaf3);   pMid1->Add(pLeaf4);   pRoot->Add(pMid1);

	pRoot->Show(0);

	delete pLeaf1;     pLeaf1 = NULL;    delete pLeaf2;     pLeaf2 = NULL;
	delete pLeaf3;     pLeaf3 = NULL;    delete pLeaf4;     pLeaf4 = NULL;
	delete pMid1;      pMid1 = NULL;
	delete pRoot;      pRoot  = NULL;
	system("pause");
}
